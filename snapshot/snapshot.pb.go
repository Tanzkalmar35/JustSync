// To regenerate protobuf golang code:
// protoc --go_out=. --go_opt=paths=source_relative snapshot/snapshot.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.21.12
// source: snapshot/snapshot.proto

package snapshot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Chunk_ChangeType int32

const (
	Chunk_UNCHANGED Chunk_ChangeType = 0 // Default value for existing chunks
	Chunk_ADD       Chunk_ChangeType = 1
	Chunk_REMOVE    Chunk_ChangeType = 2
	Chunk_MOVE      Chunk_ChangeType = 3
)

// Enum value maps for Chunk_ChangeType.
var (
	Chunk_ChangeType_name = map[int32]string{
		0: "UNCHANGED",
		1: "ADD",
		2: "REMOVE",
		3: "MOVE",
	}
	Chunk_ChangeType_value = map[string]int32{
		"UNCHANGED": 0,
		"ADD":       1,
		"REMOVE":    2,
		"MOVE":      3,
	}
)

func (x Chunk_ChangeType) Enum() *Chunk_ChangeType {
	p := new(Chunk_ChangeType)
	*p = x
	return p
}

func (x Chunk_ChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Chunk_ChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_snapshot_snapshot_proto_enumTypes[0].Descriptor()
}

func (Chunk_ChangeType) Type() protoreflect.EnumType {
	return &file_snapshot_snapshot_proto_enumTypes[0]
}

func (x Chunk_ChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Chunk_ChangeType.Descriptor instead.
func (Chunk_ChangeType) EnumDescriptor() ([]byte, []int) {
	return file_snapshot_snapshot_proto_rawDescGZIP(), []int{1, 0}
}

type FileChunks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WholeHash []byte   `protobuf:"bytes,1,opt,name=whole_hash,json=wholeHash,proto3" json:"whole_hash,omitempty"` // 32-byte BLAKE3 hash
	Chunks    []*Chunk `protobuf:"bytes,2,rep,name=chunks,proto3" json:"chunks,omitempty"`                        // The chunks of this file created using CDC - Content defined chunking
}

func (x *FileChunks) Reset() {
	*x = FileChunks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_snapshot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileChunks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunks) ProtoMessage() {}

func (x *FileChunks) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_snapshot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunks.ProtoReflect.Descriptor instead.
func (*FileChunks) Descriptor() ([]byte, []int) {
	return file_snapshot_snapshot_proto_rawDescGZIP(), []int{0}
}

func (x *FileChunks) GetWholeHash() []byte {
	if x != nil {
		return x.WholeHash
	}
	return nil
}

func (x *FileChunks) GetChunks() []*Chunk {
	if x != nil {
		return x.Chunks
	}
	return nil
}

type Chunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash       []byte           `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`                                                               // The blake3 checksum of this chunk
	Size       int64            `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`                                                              // The size of this chunk
	Offset     int64            `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`                                                          // The offset of this chunk
	ChangeType Chunk_ChangeType `protobuf:"varint,4,opt,name=change_type,json=changeType,proto3,enum=snapshot.Chunk_ChangeType" json:"change_type,omitempty"` // Optional field for sync operations
	OldOffset  int64            `protobuf:"varint,5,opt,name=old_offset,json=oldOffset,proto3" json:"old_offset,omitempty"`                                   // Previous offset for MOVE operations
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_snapshot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_snapshot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_snapshot_snapshot_proto_rawDescGZIP(), []int{1}
}

func (x *Chunk) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Chunk) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Chunk) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Chunk) GetChangeType() Chunk_ChangeType {
	if x != nil {
		return x.ChangeType
	}
	return Chunk_UNCHANGED
}

func (x *Chunk) GetOldOffset() int64 {
	if x != nil {
		return x.OldOffset
	}
	return 0
}

type ProjectSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                                                                                     // Format version
	Timestamp int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                                // Unix nanoseconds
	Files     map[string]*FileChunks `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // path â†’ file metadata
}

func (x *ProjectSnapshot) Reset() {
	*x = ProjectSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_snapshot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectSnapshot) ProtoMessage() {}

func (x *ProjectSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_snapshot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectSnapshot.ProtoReflect.Descriptor instead.
func (*ProjectSnapshot) Descriptor() ([]byte, []int) {
	return file_snapshot_snapshot_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectSnapshot) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ProjectSnapshot) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ProjectSnapshot) GetFiles() map[string]*FileChunks {
	if x != nil {
		return x.Files
	}
	return nil
}

type FileSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`         // The relative file path
	Content  []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`   // The raw file content
	Checksum []byte `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"` // The checksum of the file content
}

func (x *FileSync) Reset() {
	*x = FileSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_snapshot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSync) ProtoMessage() {}

func (x *FileSync) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_snapshot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSync.ProtoReflect.Descriptor instead.
func (*FileSync) Descriptor() ([]byte, []int) {
	return file_snapshot_snapshot_proto_rawDescGZIP(), []int{3}
}

func (x *FileSync) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileSync) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *FileSync) GetChecksum() []byte {
	if x != nil {
		return x.Checksum
	}
	return nil
}

type SyncFileMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//	*SyncFileMessage_StartSync
	//	*SyncFileMessage_File
	//	*SyncFileMessage_EndSync
	Payload isSyncFileMessage_Payload `protobuf_oneof:"payload"`
}

func (x *SyncFileMessage) Reset() {
	*x = SyncFileMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snapshot_snapshot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncFileMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncFileMessage) ProtoMessage() {}

func (x *SyncFileMessage) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_snapshot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncFileMessage.ProtoReflect.Descriptor instead.
func (*SyncFileMessage) Descriptor() ([]byte, []int) {
	return file_snapshot_snapshot_proto_rawDescGZIP(), []int{4}
}

func (m *SyncFileMessage) GetPayload() isSyncFileMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *SyncFileMessage) GetStartSync() string {
	if x, ok := x.GetPayload().(*SyncFileMessage_StartSync); ok {
		return x.StartSync
	}
	return ""
}

func (x *SyncFileMessage) GetFile() *FileSync {
	if x, ok := x.GetPayload().(*SyncFileMessage_File); ok {
		return x.File
	}
	return nil
}

func (x *SyncFileMessage) GetEndSync() string {
	if x, ok := x.GetPayload().(*SyncFileMessage_EndSync); ok {
		return x.EndSync
	}
	return ""
}

type isSyncFileMessage_Payload interface {
	isSyncFileMessage_Payload()
}

type SyncFileMessage_StartSync struct {
	StartSync string `protobuf:"bytes,1,opt,name=StartSync,proto3,oneof"` // Special signal telling the receiver to prepare
}

type SyncFileMessage_File struct {
	// receiving a new file
	File *FileSync `protobuf:"bytes,2,opt,name=file,proto3,oneof"` // The file to sync
}

type SyncFileMessage_EndSync struct {
	EndSync string `protobuf:"bytes,3,opt,name=EndSync,proto3,oneof"` // Special signal telling the reveiver that the file
}

func (*SyncFileMessage_StartSync) isSyncFileMessage_Payload() {}

func (*SyncFileMessage_File) isSyncFileMessage_Payload() {}

func (*SyncFileMessage_EndSync) isSyncFileMessage_Payload() {}

var File_snapshot_snapshot_proto protoreflect.FileDescriptor

var file_snapshot_snapshot_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x22, 0x54, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x27, 0x0a, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x52, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x22, 0xdf, 0x01, 0x0a, 0x05, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x6c, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x3a, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a,
	0x09, 0x55, 0x4e, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x03, 0x22, 0xd5, 0x01, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3a, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x1a, 0x4e, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x54, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0x82, 0x01, 0x0a, 0x0f, 0x53, 0x79,
	0x6e, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x28, 0x0a,
	0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x48,
	0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x53, 0x79,
	0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x53,
	0x79, 0x6e, 0x63, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x0c,
	0x5a, 0x0a, 0x2e, 0x2f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snapshot_snapshot_proto_rawDescOnce sync.Once
	file_snapshot_snapshot_proto_rawDescData = file_snapshot_snapshot_proto_rawDesc
)

func file_snapshot_snapshot_proto_rawDescGZIP() []byte {
	file_snapshot_snapshot_proto_rawDescOnce.Do(func() {
		file_snapshot_snapshot_proto_rawDescData = protoimpl.X.CompressGZIP(file_snapshot_snapshot_proto_rawDescData)
	})
	return file_snapshot_snapshot_proto_rawDescData
}

var file_snapshot_snapshot_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_snapshot_snapshot_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_snapshot_snapshot_proto_goTypes = []interface{}{
	(Chunk_ChangeType)(0),   // 0: snapshot.Chunk.ChangeType
	(*FileChunks)(nil),      // 1: snapshot.FileChunks
	(*Chunk)(nil),           // 2: snapshot.Chunk
	(*ProjectSnapshot)(nil), // 3: snapshot.ProjectSnapshot
	(*FileSync)(nil),        // 4: snapshot.FileSync
	(*SyncFileMessage)(nil), // 5: snapshot.SyncFileMessage
	nil,                     // 6: snapshot.ProjectSnapshot.FilesEntry
}
var file_snapshot_snapshot_proto_depIdxs = []int32{
	2, // 0: snapshot.FileChunks.chunks:type_name -> snapshot.Chunk
	0, // 1: snapshot.Chunk.change_type:type_name -> snapshot.Chunk.ChangeType
	6, // 2: snapshot.ProjectSnapshot.files:type_name -> snapshot.ProjectSnapshot.FilesEntry
	4, // 3: snapshot.SyncFileMessage.file:type_name -> snapshot.FileSync
	1, // 4: snapshot.ProjectSnapshot.FilesEntry.value:type_name -> snapshot.FileChunks
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_snapshot_snapshot_proto_init() }
func file_snapshot_snapshot_proto_init() {
	if File_snapshot_snapshot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snapshot_snapshot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileChunks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_snapshot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_snapshot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_snapshot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snapshot_snapshot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncFileMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_snapshot_snapshot_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SyncFileMessage_StartSync)(nil),
		(*SyncFileMessage_File)(nil),
		(*SyncFileMessage_EndSync)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snapshot_snapshot_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snapshot_snapshot_proto_goTypes,
		DependencyIndexes: file_snapshot_snapshot_proto_depIdxs,
		EnumInfos:         file_snapshot_snapshot_proto_enumTypes,
		MessageInfos:      file_snapshot_snapshot_proto_msgTypes,
	}.Build()
	File_snapshot_snapshot_proto = out.File
	file_snapshot_snapshot_proto_rawDesc = nil
	file_snapshot_snapshot_proto_goTypes = nil
	file_snapshot_snapshot_proto_depIdxs = nil
}
