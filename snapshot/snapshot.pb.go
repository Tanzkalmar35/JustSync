// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.2
// source: snapshot/snapshot.proto

package snapshot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileChunks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WholeHash     []byte                 `protobuf:"bytes,1,opt,name=whole_hash,json=wholeHash,proto3" json:"whole_hash,omitempty"`       // 32-byte BLAKE3 hash
	ChunkHashes   [][]byte               `protobuf:"bytes,2,rep,name=chunk_hashes,json=chunkHashes,proto3" json:"chunk_hashes,omitempty"` // 32-byte chunk hashes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunks) Reset() {
	*x = FileChunks{}
	mi := &file_snapshot_snapshot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunks) ProtoMessage() {}

func (x *FileChunks) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_snapshot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunks.ProtoReflect.Descriptor instead.
func (*FileChunks) Descriptor() ([]byte, []int) {
	return file_snapshot_snapshot_proto_rawDescGZIP(), []int{0}
}

func (x *FileChunks) GetWholeHash() []byte {
	if x != nil {
		return x.WholeHash
	}
	return nil
}

func (x *FileChunks) GetChunkHashes() [][]byte {
	if x != nil {
		return x.ChunkHashes
	}
	return nil
}

type ProjectSnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                                                                       // Format version
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                  // Unix nanoseconds
	Files         map[string]*FileChunks `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // path â†’ file metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectSnapshot) Reset() {
	*x = ProjectSnapshot{}
	mi := &file_snapshot_snapshot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectSnapshot) ProtoMessage() {}

func (x *ProjectSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_snapshot_snapshot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectSnapshot.ProtoReflect.Descriptor instead.
func (*ProjectSnapshot) Descriptor() ([]byte, []int) {
	return file_snapshot_snapshot_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectSnapshot) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ProjectSnapshot) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ProjectSnapshot) GetFiles() map[string]*FileChunks {
	if x != nil {
		return x.Files
	}
	return nil
}

var File_snapshot_snapshot_proto protoreflect.FileDescriptor

const file_snapshot_snapshot_proto_rawDesc = "" +
	"\n" +
	"\x17snapshot/snapshot.proto\x12\bsnapshot\"N\n" +
	"\n" +
	"FileChunks\x12\x1d\n" +
	"\n" +
	"whole_hash\x18\x01 \x01(\fR\twholeHash\x12!\n" +
	"\fchunk_hashes\x18\x02 \x03(\fR\vchunkHashes\"\xd5\x01\n" +
	"\x0fProjectSnapshot\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12:\n" +
	"\x05files\x18\x03 \x03(\v2$.snapshot.ProjectSnapshot.FilesEntryR\x05files\x1aN\n" +
	"\n" +
	"FilesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.snapshot.FileChunksR\x05value:\x028\x01B\fZ\n" +
	"./snapshotb\x06proto3"

var (
	file_snapshot_snapshot_proto_rawDescOnce sync.Once
	file_snapshot_snapshot_proto_rawDescData []byte
)

func file_snapshot_snapshot_proto_rawDescGZIP() []byte {
	file_snapshot_snapshot_proto_rawDescOnce.Do(func() {
		file_snapshot_snapshot_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_snapshot_snapshot_proto_rawDesc), len(file_snapshot_snapshot_proto_rawDesc)))
	})
	return file_snapshot_snapshot_proto_rawDescData
}

var file_snapshot_snapshot_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_snapshot_snapshot_proto_goTypes = []any{
	(*FileChunks)(nil),      // 0: snapshot.FileChunks
	(*ProjectSnapshot)(nil), // 1: snapshot.ProjectSnapshot
	nil,                     // 2: snapshot.ProjectSnapshot.FilesEntry
}
var file_snapshot_snapshot_proto_depIdxs = []int32{
	2, // 0: snapshot.ProjectSnapshot.files:type_name -> snapshot.ProjectSnapshot.FilesEntry
	0, // 1: snapshot.ProjectSnapshot.FilesEntry.value:type_name -> snapshot.FileChunks
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_snapshot_snapshot_proto_init() }
func file_snapshot_snapshot_proto_init() {
	if File_snapshot_snapshot_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_snapshot_snapshot_proto_rawDesc), len(file_snapshot_snapshot_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snapshot_snapshot_proto_goTypes,
		DependencyIndexes: file_snapshot_snapshot_proto_depIdxs,
		MessageInfos:      file_snapshot_snapshot_proto_msgTypes,
	}.Build()
	File_snapshot_snapshot_proto = out.File
	file_snapshot_snapshot_proto_goTypes = nil
	file_snapshot_snapshot_proto_depIdxs = nil
}
